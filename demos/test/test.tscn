[gd_scene load_steps=4 format=1]

[sub_resource type="GDScript" id=1]

script/source = "\nextends VoxelMap\n\n\nexport var dict = Dictionary()\n# member variables here, example:\n# var a=2\n# var b=\"textvar\"\n\nfunc _ready():\n\t# Called every time the node is added to the scene.\n\t# Initialization here\n\tvar block = Block.new()\n\tvar data = load(\'res://test_block_data.tres\')\n\tprint(data.has_custom_mesh())\n\tblock.set_block_data(data)\n\tprint(block.get_custom_data(\"Herausgeber\"))\n\tprint(block.get_custom_data(\"Inhaber\"))\n\tprint (block.get_custom_data(\"Inhaber\")[\'Alter\'] + 10)"

[sub_resource type="MaterialShaderGraph" id=2]

_code = { "fragment":"", "fragment_ofs":0, "light":"", "light_ofs":0, "vertex":"", "vertex_ofs":0 }
_data = { "shaders":[ [ 0, 33, Vector2( 350, 40 ), null, null, [  ], 1, 0, Vector2( 50, 40 ), null, null, [  ] ], [ 0, 33, Vector2( 350, 40 ), null, null, [ 0, 1, 2, 2, 1, 4 ], 1, 0, Vector2( 50, 40 ), null, null, [  ] ], [ 0, 33, Vector2( 350, 40 ), null, null, [  ], 1, 0, Vector2( 50, 40 ), null, null, [  ] ] ] }

[sub_resource type="ShaderMaterial" id=3]

flags/visible = true
flags/double_sided = false
flags/invert_faces = false
flags/unshaded = false
flags/on_top = false
flags/lightmap_on_uv2 = true
flags/colarray_is_srgb = false
params/blend_mode = 0
params/depth_draw = 1
params/line_width = 0.0
shader/shader = SubResource( 2 )

[node name="VoxelMap" type="VoxelMap"]

_import_transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )
chunk_dimensions = 16
script/script = SubResource( 1 )
dict = {  }

[node name="Chunk" type="Chunk" parent="."]

_import_transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )
layers = 1
geometry/visible = true
geometry/material_override = null
geometry/cast_shadow = 1
geometry/receive_shadows = true
geometry/range_begin = 0.0
geometry/range_end = 0.0
geometry/extra_cull_margin = 0.0
geometry/billboard = false
geometry/billboard_y = false
geometry/depth_scale = false
geometry/visible_in_all_rooms = false
geometry/use_baked_light = false
geometry/baked_light_tex_id = 0
mesh/mesh = null
mesh/skeleton = NodePath("..")
dimensions = Vector3( 20, 25, 25 )

[node name="TestCube" type="TestCube" parent="."]

_import_transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )
layers = 1
geometry/visible = true
geometry/material_override = SubResource( 3 )
geometry/cast_shadow = 1
geometry/receive_shadows = true
geometry/range_begin = 0.0
geometry/range_end = 0.0
geometry/extra_cull_margin = 0.0
geometry/billboard = false
geometry/billboard_y = false
geometry/depth_scale = false
geometry/visible_in_all_rooms = false
geometry/use_baked_light = false
geometry/baked_light_tex_id = 0


